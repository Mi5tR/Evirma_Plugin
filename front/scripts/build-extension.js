const fs = require("fs")
const path = require("path")
const archiver = require("archiver")

// –°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
function createExtensionZip() {
  const output = fs.createWriteStream("extension.zip")
  const archive = archiver("zip", {
    zlib: { level: 9 },
  })

  output.on("close", () => {
    console.log("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–ø–∞–∫–æ–≤–∞–Ω–æ: extension.zip (" + archive.pointer() + " bytes)")
    console.log("üì¶ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –≤ Chrome Web Store –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ")
  })

  archive.on("error", (err) => {
    throw err
  })

  archive.pipe(output)

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ public
  archive.directory("public/", false)

  archive.finalize()
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
function createIcons() {
  const iconsDir = path.join(__dirname, "../public/icons")

  if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir, { recursive: true })
  }

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ SVG –∏–∫–æ–Ω–∫–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PNG
  const svgIcon = `
        <svg width="128" height="128" viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="100%">
                    <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:1" />
                    <stop offset="100%" style="stop-color:#1d4ed8;stop-opacity:1" />
                </linearGradient>
            </defs>
            <rect width="128" height="128" rx="24" fill="url(#grad)"/>
            <text x="64" y="80" font-family="Arial, sans-serif" font-size="48" fill="white" text-anchor="middle">üìä</text>
        </svg>
    `

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º SVG (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
  fs.writeFileSync(path.join(iconsDir, "icon.svg"), svgIcon)

  console.log("üé® –ò–∫–æ–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ public/icons/")
  console.log("üí° –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∑–∞–º–µ–Ω–∏—Ç–µ SVG –Ω–∞ PNG —Ñ–∞–π–ª—ã —Ä–∞–∑–º–µ—Ä–æ–º 16x16, 48x48, 128x128")
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
function validateExtension() {
  const requiredFiles = [
    "public/manifest.json",
    "public/popup.html",
    "public/popup.js",
    "public/content-script.js",
    "public/background.js",
  ]

  let isValid = true

  requiredFiles.forEach((file) => {
    if (!fs.existsSync(file)) {
      console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`)
      isValid = false
    }
  })

  if (isValid) {
    console.log("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
  }

  return isValid
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏
function buildExtension() {
  console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è Exoad WB Analytics...\n")

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  if (!validateExtension()) {
    console.error("‚ùå –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤")
    return
  }

  // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫–∏
  createIcons()

  // –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
  createExtensionZip()

  console.log("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:")
  console.log("1. –û—Ç–∫—Ä–æ–π—Ç–µ Chrome –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ chrome://extensions/")
  console.log('2. –í–∫–ª—é—á–∏—Ç–µ "–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"')
  console.log('3. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ"')
  console.log('4. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É "public" –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞')
  console.log("\nüåê –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Chrome Web Store –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ extension.zip")
}

// –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏
if (require.main === module) {
  buildExtension()
}

module.exports = { buildExtension, validateExtension, createIcons }
